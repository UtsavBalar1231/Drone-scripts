#!/usr/bin/env bash
# shellcheck disable=SC2199
# shellcheck source=/dev/null
#
# Copyright (C) 2020-21 UtsavBalar1231 <utsavbalar1231@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cd /drone/src/ || exit

HOME="/drone/src"

# Export Cross Compiler name
if [[ "$@" =~ "lto"* ]]; then
	export COMPILER="Azure clang 14.0 LTO"
else
	export COMPILER="Azure clang 14.0"
fi

KBUILD_COMPILER_STRING=$("$TC_DIR"/bin/clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g' -e 's/[[:space:]]*$//')

#
# Enviromental Variables
#

# Set the last commit author
AUTHOR=$(git log -n 1 --pretty=format:'%an')

# Set the current branch name
BRANCH=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)

# Set the last commit sha
COMMIT=$(git rev-parse --short HEAD)

# Set current date
DATE=$(date +"%d.%m.%y")

# Set Kernel link
if [[ "$@" =~ "raphael"* ]]; then
	KERNEL_LINK=https://github.com/UtsavBalar1231/kernel_xiaomi_raphael
else
	KERNEL_LINK=https://github.com/UtsavBalar1231/kernel_xiaomi_sm8250
fi

# Set Kernel Version
KERNELVER=$(make kernelversion)

# Set Post Message
MESSAGE="$AUTHOR: $REF$KERNEL_LINK/commit/$COMMIT"

# Set our directory
OUT_DIR=out/

# Get reference string
REF=$(echo "$BRANCH" | grep -Eo "[^ /]+\$")

# Select LTO or non LTO builds
if [[ "$@" =~ "lto"* ]]; then
	VERSION="IMMENSITY-${DEVICE^^}-${TYPE}-LTO-${DRONE_BUILD_NUMBER}-${DATE}"
else
	VERSION="IMMENSITY-${DEVICE^^}-${TYPE}-${DRONE_BUILD_NUMBER}-${DATE}"
fi

# Export Zip name
export ZIPNAME="${VERSION}.zip"

# How much kebabs we need? Kanged from @raphielscape :)
if [[ -z "${KEBABS}" ]]; then
	COUNT="$(grep -c '^processor' /proc/cpuinfo)"
	export KEBABS="$((COUNT * 2))"
fi

# Post to CI channel
curl -s -X POST https://api.telegram.org/bot"${BOT_API_KEY}"/sendPhoto -d photo=https://github.com/UtsavBalar1231/xda-stuff/raw/master/banner.png -d chat_id="${CI_CHANNEL_ID}"
curl -s -X POST https://api.telegram.org/bot"${BOT_API_KEY}"/sendMessage -d text="<code>               IMMENSITY Automated build</code>
<code>-----------------------------------------------------------</code>
<b>• BuildType</b> : <code>${TYPE}</code>
<b>• Device</b> : <code>${DEVICE}</code>
<b>• Compiler</b> : <code>${COMPILER}</code>
<b>• Branch</b> : <code>$(git rev-parse --abbrev-ref HEAD)</code>
<b>• Kernelversion</b> : <code>${KERNELVER}</code>
<b>• Commit</b> : ${MESSAGE}
<code>-----------------------------------------------------------</code>

<i>• Build started on Drone Cloud...</i>
• <a href='https://cloud.drone.io/UtsavBalar1231/kernel_xiaomi_sm8250/${DRONE_BUILD_NUMBER}'>Check the build status here</a>" -d chat_id="${CI_CHANNEL_ID}" -d parse_mode=HTML
curl -s -X POST https://api.telegram.org/bot"${BOT_API_KEY}"/sendMessage -d text="Build started for revision ${DRONE_BUILD_NUMBER}" -d chat_id="${CI_CHANNEL_ID}" -d parse_mode=HTML

START=$(date +"%s")

# Set compiler Path
PATH=${HOME}/clang/bin/:$PATH

# Make defconfig
make ARCH=arm64 \
	O=${OUT_DIR} \
	"${DEVICE}"_defconfig \
	-j${KEBABS}

if [[ "$@" =~ "lto"* ]]; then
	# Enable LTO
	scripts/config --file ${OUT_DIR}/.config \
		-e LTO \
		-e LTO_CLANG \
		-d THINLTO \
		-e SHADOW_CALL_STACK \
		-e POLLY_CLANG \
		-e TOOLS_SUPPORT_RELR \
		-e LD_LLD

	# Make olddefconfig
	cd ${OUT_DIR} || exit
	make O=${OUT_DIR} \
		ARCH=arm64 \
		olddefconfig \
		-j${KEBABS}
		cd ../

elif [[ "$@" =~ "lto"* ]] && [[ "$@" =~ "miui"* ]]; then
	# Enable LTO
	scripts/config --file ${OUT_DIR}/.config \
		-e LTO \
		-e LTO_CLANG \
		-d THINLTO \
		-e SHADOW_CALL_STACK \
		-e POLLY_CLANG \
		-e TOOLS_SUPPORT_RELR \
		-e LD_LLD \
		-d LOCALVERSION_AUTO \
		-e MIHW \
		-e MILLET \
		-e MI_RECLAIM \
		-e BINDER_OPT \
		-e KPERFEVENTS \
		-e PERF_HUMANTASK

	# Make olddefconfig
	cd ${OUT_DIR} || exit
	make O=${OUT_DIR} \
		ARCH=arm64 \
		olddefconfig \
		-j${KEBABS}
	cd ../

	# Correct panel dimensions on MIUI builds
	sed -i 's/<70>/<695>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j3s-37-02-0a-dsc-video.dtsi
	sed -i 's/<70>/<695>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j11-38-08-0a-fhd-cmd.dtsi
	sed -i 's/<70>/<695>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-k11a-38-08-0a-dsc-cmd.dtsi
	sed -i 's/<71>/<710>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j1s*
	sed -i 's/<71>/<710>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j2*
	sed -i 's/<155>/<1544>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j3s-37-02-0a-dsc-video.dtsi
	sed -i 's/<155>/<1545>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j11-38-08-0a-fhd-cmd.dtsi
	sed -i 's/<155>/<1546>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-k11a-38-08-0a-dsc-cmd.dtsi
	sed -i 's/<154>/<1537>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j1s*
	sed -i 's/<154>/<1537>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j2*

	# Enable back mi smartfps while disabling qsync min refresh-rate
	sed -i 's/qcom,mdss-dsi-qsync-min-refresh-rate/\/\/qcom,mdss-dsi-qsync-min-refresh-rate/g'  arch/arm64/boot/dts/vendor/qcom/dsi-panel*
	sed -i 's/\/\/ mi,mdss-dsi-smart-fps-max_framerate/mi,mdss-dsi-smart-fps-max_framerate/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel*
	sed -i 's/\/\/ mi,mdss-dsi-pan-enable-smart-fps/mi,mdss-dsi-pan-enable-smart-fps/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel*
	sed -i 's/\/\/ qcom,mdss-dsi-pan-enable-smart-fps/qcom,mdss-dsi-pan-enable-smart-fps/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel*

	# Enable back refresh rates support on MIUI
	sed -i 's/120 90 60/120 90 60 50 30/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel*
	sed -i 's/144 120 90 60/120 90 60 50 48 30/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel*
fi

if [[ "$@" =~ "raphael"* ]]; then
	make ARCH=arm64 \
		O=${OUT_DIR} \
		CC="clang" \
		AR="llvm-ar" \
		NM="llvm-nm" \
		OBJCOPY="llvm-objcopy" \
		OBJDUMP="llvm-objdump" \
		STRIP="llvm-strip" \
		LD="ld.lld" \
		CLANG_TRIPLE="aarch64-linux-gnu-" \
		CROSS_COMPILE="aarch64-linux-gnu-" \
		CROSS_COMPILE_ARM32="arm-linux-gnueabi-" \
		-j${KEBABS}
else
	if [[ "$@" =~ "miui"* ]]; then
		scripts/config --file ${OUT_DIR}/.config \
			-d LOCALVERSION_AUTO \
			-e MIHW \
			-e MILLET \
			-e MI_RECLAIM \
			-e BINDER_OPT \
			-e KPERFEVENTS \
			-e PERF_HUMANTASK

		# Make olddefconfig
		cd ${OUT_DIR} || exit
		make O=${OUT_DIR} \
			ARCH=arm64 \
			olddefconfig
		cd ../

		# Correct panel dimensions on MIUI builds
		sed -i 's/<70>/<695>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j3s-37-02-0a-dsc-video.dtsi
		sed -i 's/<70>/<695>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j11-38-08-0a-fhd-cmd.dtsi
		sed -i 's/<70>/<695>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-k11a-38-08-0a-dsc-cmd.dtsi
		sed -i 's/<71>/<710>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j1s*
		sed -i 's/<71>/<710>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j2*
		sed -i 's/<155>/<1544>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j3s-37-02-0a-dsc-video.dtsi
		sed -i 's/<155>/<1545>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j11-38-08-0a-fhd-cmd.dtsi
		sed -i 's/<155>/<1546>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-k11a-38-08-0a-dsc-cmd.dtsi
		sed -i 's/<154>/<1537>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j1s*
		sed -i 's/<154>/<1537>/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j2*

		# Enable back mi smartfps while disabling qsync min refresh-rate
		sed -i 's/qcom,mdss-dsi-qsync-min-refresh-rate/\/\/qcom,mdss-dsi-qsync-min-refresh-rate/g'  arch/arm64/boot/dts/vendor/qcom/dsi-panel*
		sed -i 's/\/\/ mi,mdss-dsi-smart-fps-max_framerate/mi,mdss-dsi-smart-fps-max_framerate/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel*
		sed -i 's/\/\/ mi,mdss-dsi-pan-enable-smart-fps/mi,mdss-dsi-pan-enable-smart-fps/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel*
		sed -i 's/\/\/ qcom,mdss-dsi-pan-enable-smart-fps/qcom,mdss-dsi-pan-enable-smart-fps/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel*

		# Enable back refresh rates support on MIUI
		sed -i 's/120 90 60/120 90 60 50 30/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel*
		sed -i 's/144 120 90 60/120 90 60 50 48 30/g' arch/arm64/boot/dts/vendor/qcom/dsi-panel*
	fi

	make ARCH=arm64 \
		O=${OUT_DIR} \
		LLVM=1 \
		CROSS_COMPILE="aarch64-linux-gnu-" \
		CROSS_COMPILE_ARM32="arm-linux-gnueabi-" \
		-j${KEBABS}
fi

END=$(date +"%s")
DIFF=$((END - START))

# Import Anykernel3 folder
cp "$(pwd)"/${OUT_DIR}/arch/arm64/boot/Image.gz-dtb "$(pwd)"/anykernel/
cp "$(pwd)"/${OUT_DIR}/arch/arm64/boot/dtbo.img "$(pwd)"/anykernel/

cd anykernel || exit
zip -r9 "${ZIPNAME}" ./* -x .git .gitignore ./*.zip
CHECKER=$(find ./ -maxdepth 1 -type f -name ${ZIPNAME} -printf "%s\n")
if (($((CHECKER / 1048576)) > 5)); then
	curl -s -X POST https://api.telegram.org/bot"${BOT_API_KEY}"/sendMessage -d text="✅Kernel compiled successfully in $((DIFF / 60)) minute(s) and $((DIFF % 60)) seconds for ${DEVICE}" -d chat_id="${CI_CHANNEL_ID}" -d parse_mode=HTML
	curl -F chat_id="${CI_CHANNEL_ID}" -F document=@"$(pwd)/${ZIPNAME}" https://api.telegram.org/bot"${BOT_API_KEY}"/sendDocument
else
	curl -s -X POST https://api.telegram.org/bot"${BOT_API_KEY}"/sendMessage -d text="Error in build!!" -d chat_id="${CI_CHANNEL_ID}"
	exit 1;
fi
cd "$(pwd)" || exit

# Cleanup
rm -fr anykernel/
if [[ "$@" =~ "miui"* ]]; then
	cd /drone/src
	git reset --hard
fi
