#!/usr/bin/env bash
# shellcheck disable=SC2199
# shellcheck source=/dev/null
#
# Copyright (C) 2020-22 UtsavBalar1231 <utsavbalar1231@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cd /drone/src/ || exit

HOME="/drone/src"

#
# Enviromental Variables
#

# Set the last commit author
AUTHOR=$(git log -n 1 --pretty=format:'%an')

# Set the current branch name
BRANCH=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)

# Set the last commit sha
COMMIT=$(git rev-parse --short HEAD)

# Set Kernel link
KERNEL_LINK=https://github.com/UtsavBalar1231/kernel_rockchip_linux

# Set Kernel Version
KERNELVER=$(make kernelversion)

# Set Post Message
MESSAGE="$AUTHOR: $REF$KERNEL_LINK/commit/$COMMIT"

# Set our directory
OUT_DIR=out/

# Set Compiler
COMPILER="GCC 9.4.0"

# Get reference string
REF=$(echo "$BRANCH" | grep -Eo "[^ /]+\$")

# How much kebabs we need? Kanged from @raphielscape :)
if [[ -z "${KEBABS}" ]]; then
    COUNT="$(grep -c '^processor' /proc/cpuinfo)"
    export KEBABS="$((COUNT * 2))"
fi

tg_post_message() {
    # Post to CI channel
    curl -s -X POST https://api.telegram.org/bot"${BOT_API_KEY}"/sendMessage -d text="<code>Automated kernel build</code>
    <b>BUILD TYPE</b> : <code>${TYPE}</code>
    <b>DEVICE</b> : <code>${DEVICE}</code>
    <b>COMPILER</b> : <code>${COMPILER}</code>
    <b>BRANCH</b> : <code>$(git rev-parse --abbrev-ref HEAD)</code>
    <b>KERNEL VERSION</b> : <code>${KERNELVER}</code>
    <b>COMMIT</b> : ${MESSAGE}

    <i>Build started on Drone Cloud!</i>
    <a href='https://cloud.drone.io/UtsavBalar1231/kernel_rockchip_linux/${DRONE_BUILD_NUMBER}'>Check the build status here</a>" -d chat_id="${CI_CHANNEL_ID}" -d parse_mode=HTML
    curl -s -X POST https://api.telegram.org/bot"${BOT_API_KEY}"/sendMessage -d text="Build started for revision ${DRONE_BUILD_NUMBER}" -d chat_id="${CI_CHANNEL_ID}" -d parse_mode=HTML
}

tg_upload() {
    # Post to CI channel
    curl -s -X POST https://api.telegram.org/bot"${BOT_API_KEY}"/sendMessage -d text="âœ…Kernel compiled successfully in $((DIFF / 60)) minute(s) and $((DIFF % 60)) seconds for ${DEVICE}" -d chat_id="${CI_CHANNEL_ID}" -d parse_mode=HTML
    curl -F chat_id="${CI_CHANNEL_ID}" -F document=@"$(pwd)/${OUT_DIR}/uploads/Image" https://api.telegram.org/bot"${BOT_API_KEY}"/sendDocument
    curl -F chat_id="${CI_CHANNEL_ID}" -F document=@"$(pwd)/${OUT_DIR}/uploads/dtb" https://api.telegram.org/bot"${BOT_API_KEY}"/sendDocument
}

ARGS="ARCH=arm64 \
O=${OUT_DIR} \
CROSS_COMPILE=aarch64-linux-gnu- \
-j${KEBABS}"

START=$(date +"%s")

tg_post_message

# Make defconfig
make -j${KEBABS} ${ARGS} "${DEVICE}"_defconfig

make -j${KEBABS} ${ARGS} 2>&1 | tee build.log
find ${OUT_DIR}/arch/arm64/boot/dts/rockchip -name '*.dtb' -exec cat {} + > ${OUT_DIR}/arch/arm64/boot/rk3399.dtb

mkdir -p ${OUT_DIR}/uploads
if [[ -f ${OUT_DIR}/arch/arm64/boot/Image ]]; then
    cp ${OUT_DIR}/arch/arm64/boot/Image ${OUT_DIR}/uploads
    cp ${OUT_DIR}/arch/arm64/boot/dtb ${OUT_DIR}/uploads
    tg_upload
else
    curl -s -X POST https://api.telegram.org/bot"${BOT_API_KEY}"/sendMessage -d text="Error in build!!" -d chat_id="${CI_CHANNEL_ID}"
    exit 1;
fi

END=$(date +"%s")
DIFF=$((END - START))
